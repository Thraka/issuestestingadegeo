# This is a basic workflow to help you get started with Actions
name: RepoManAger 5000

# Controls when the action will run. Triggers the workflow on push or pull request
# events on the main branch only.
on:
  issues:
    types: [opened, reopened]

env:
  DOTNET_INSTALLER_CHANNEL: 'release/5.0.1xx'
  DOTNET_DO_INSTALL: 'true'
  EnableNuGetPackageRestore: 'True'
  MAIN_BRANCH: 'master'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    #- uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 #@v2
    #- uses: actions/setup-dotnet@a71d1eb2c86af85faa8c772c03fb365e377e45ea
    #  with:
    #    dotnet-version: 5.0.x
 
    # Print dotnet info
    - name: Display .NET info
      run: |
        dotnet --info

    - name: Pull rules file
      run: |
        curl https://raw.githubusercontent.com/${{github.repository}}/$MAIN_BRANCH/.ghal.rules.json -o rules.json

    - name: debug info
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cat $GITHUB_EVENT_PATH

    # # Install locate projs global tool
    # - name: Install LocateProjects tool
    #   run: |
    #     dotnet tool install --global --add-source ./.github/workflows/dependencies/ DotnetDocsTools.LocateProjects
    
    # # Run locate projs tool
    # - name: Locate projects for PR
    #   env:
    #     GitHubKey: ${{ secrets.GITHUB_TOKEN }}
    #     LocateExts: ".cs;.vb;.fs;.cpp;.h;.xaml;.razor;.cshtml;.vbhtml;.csproj;.fsproj;.vbproj;.vcxproj;.sln"
    #   run: |
    #     ./.github/workflows/dependencies/Get-MSBuildResults.ps1 "${{ github.workspace }}" -PullRequest ${{ github.event.number }} -RepoOwner ${{ github.repository_owner }} -RepoName ${{ github.event.repository.name }}
        
    # # Update build output json file
    # - name: Upload build results
    #   uses: actions/upload-artifact@3446296876d12d4e3a0f3145a3c87e67bf0a16b5 #@v1
    #   with:
    #     name: build
    #     path: ./output.json

    # # Return status based on json file
    # - name: Report status
    #   run: |
    #     ./.github/workflows/dependencies/Out-GithubActionStatus.ps1
